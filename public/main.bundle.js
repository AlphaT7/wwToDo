(()=>{console.log.bind(console);const e=document.getElementById.bind(document);e("newItem").addEventListener("click",(()=>{e("listUnDone").classList.contains("hidden")&&(e("listUnDone").classList.toggle("hidden"),e("listDone").classList.toggle("hidden"),e("tasks").innerHTML="format_list_bulleted_add");let t=Date.now(),a=document.createElement("div");var s;a.className="toDoContainer",a.id=t,a.innerHTML=`<div class="material-symbols-outlined">drag_indicator</div>\n                    <textarea type="text" class="toDoItem" placeholder="Edit"></textarea>\n                    <input type="checkbox" class="checkbox" data-listid=${t}>`,e("listUnDone").append(a),(s=e(t)).setAttribute("draggable",!0),s.addEventListener("dragover",(e=>{e.preventDefault(),1==e.target.draggable?e.target.classList.add("dropZone"):e.target.parentElement.classList.add("dropZone"),e.dataTransfer.dropEffect="move"})),s.addEventListener("dragstart",(e=>{e.dataTransfer.dropEffect="move",e.target.classList.add("dragTarget"),e.dataTransfer.setData("text/plain",e.target.id)})),s.addEventListener("dragleave",(e=>{s.classList.remove("dragTarget"),e.target.classList.remove("dropZone")})),s.addEventListener("drop",(t=>{t.preventDefault();let a=s.parentNode;!function(e,t,a,s){let n,d,l;[...document.querySelectorAll(".toDoContainer")].map(((e,t)=>{e==a&&(n=t)})),[...document.querySelectorAll(".toDoContainer")].map(((e,a)=>{e==t&&(d=a)})),l=n>d,l?s.insertBefore(a,t):s.insertBefore(a,s.children.item(d+1))}(0,s,e(t.dataTransfer.getData("text/plain")),a),s.classList.remove("dropZone"),t.target.classList.remove("dropZone")})),document.querySelectorAll(".checkbox").forEach((t=>{t.addEventListener("click",(t=>{let a=e(t.target.dataset.listid);t.target.checked?setTimeout((()=>{a.remove(),e("listDone").append(a)}),250):setTimeout((()=>{a.remove(),e("listUnDone").append(a)}),250)}))}))})),e("tasks").addEventListener("click",(t=>{'Completed List\n        <span id="deleteListItems" class="material-symbols-outlined">\n          delete_sweep\n        </span>'==e("listTitle").innerHTML?e("listTitle").innerHTML='Un-Completed List\n        <span id="deleteListItems" class="material-symbols-outlined">\n          delete_sweep\n        </span>':e("listTitle").innerHTML='Completed List\n        <span id="deleteListItems" class="material-symbols-outlined">\n          delete_sweep\n        </span>',e("deleteListItems").addEventListener("click",(t=>{confirm("Delete all completed tasks?")&&document.querySelectorAll(".checkbox:checked").forEach((t=>{e(t.dataset.listid).remove()}))})),"data_check"==t.target.innerHTML?t.target.innerHTML="format_list_bulleted_add":t.target.innerHTML="data_check",e("listUnDone").classList.toggle("hidden"),e("listDone").classList.toggle("hidden")})),e("deleteListItems").addEventListener("click",(t=>{document.querySelectorAll(".checkbox:checked").forEach((t=>{e(t.dataset.listid).remove()}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,